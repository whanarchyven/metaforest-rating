import type {NextPage} from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import TabSwitcher from "../components/TabSwitcher";
import {useEffect, useState} from "react";
import PlayerCard from "../components/PlayerCard";
import it from "node:test";

const Home: NextPage = () => {


    const [currentTab, setCurrentTab] = useState<'carrots'|'level'|'dex'|'str'|'vit'|'int'|'krm'>('carrots');
    const changeCurrentTab = (newTab: 'carrots'|'level'|'dex'|'str'|'vit'|'int'|'krm') => {
        setCurrentTab(newTab);
    }

    const byField=(field:string)=> {
        return (a:any, b:any) => a[field] < b[field] ? 1 : -1;
    }

    const players=[
        {
            telegram_id:'telegram1231',
            image:'1',
            level:1,
            carrots:100,
            str:2,
            dex:3,
            int:4,
            krm:2,
            vit:8,
        },
        {
            telegram_id:'telegram1232',
            image:'2',
            level:3,
            carrots:1100,
            str:22,
            dex:6,
            int:8,
            krm:1,
            vit:9,
        },
        {
            telegram_id:'telegram1233',
            image:'3',
            level:30,
            carrots:2100,
            str:10,
            dex:2,
            int:5,
            krm:8,
            vit:11,
        },
        {
            telegram_id:'telegram1234',
            image:'4',
            level:20,
            carrots:3400,
            str:12,
            dex:32,
            int:51,
            krm:23,
            vit:12,
        },
        {
            telegram_id:'telegram1235',
            image:'5',
            level:12,
            carrots:1592,
            str:121,
            dex:12,
            int:31,
            krm:22,
            vit:15,
        },
        {
            telegram_id:'telegram1236',
            image:'6',
            level:6,
            carrots:3,
            str:3,
            dex:5,
            int:8,
            krm:2,
            vit:4,
        },
        {
            telegram_id:'telegram1237',
            image:'7',
            level:23,
            carrots:12,
            str:14,
            dex:9,
            int:4,
            krm:9,
            vit:11,
        },
        {
            telegram_id:'telegram1237',
            image:'7',
            level:23,
            carrots:12,
            str:14,
            dex:9,
            int:4,
            krm:9,
            vit:11,
        },
        {
            telegram_id:'telegram1237',
            image:'7',
            level:23,
            carrots:12,
            str:14,
            dex:9,
            int:4,
            krm:9,
            vit:11,
        },
        {
            telegram_id:'telegram1237',
            image:'7',
            level:23,
            carrots:12,
            str:14,
            dex:9,
            int:4,
            krm:9,
            vit:11,
        },
    ]


    const [users,setUsers]=useState(players)

    const reversing=()=>{
        return users.reverse()
    }


    useEffect(()=>{
        const temp=[...players];
        temp.sort(byField(currentTab));
        setUsers(temp);
    },[currentTab])




    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className={styles.main}>
                <p className={'font-bold text-3xl sm:text-5xl text-white uppercase'}>Metaforest players Rating</p>
                <div className={'w-full mt-10'}>
                    <TabSwitcher currentTab={currentTab} switchCurrentTab={changeCurrentTab}></TabSwitcher>
                </div>
                <div className={'w-full rounded-2xl border-2 border-white gap-4 h-[500px] flex items-end justify-center mt-12'}>
                    <div className={'w-4/5 h-4/5 grid gap-x-2 sm:gap-x-10 items-end grid-cols-10'}>
                        {users.map((item,counter)=>{
                            if(counter<10){
                                return <div className={'transition-all duration-1000 ease-in-out green-gradient rounded-t-full w-full relative justify-center flex-wrap flex p-2 items-start'} style={{height:(3+counter)*10+'%'}} key={item.telegram_id+counter}>
                                    <div className={'w-16 h-16 bg-black rounded-full'}>
                                        <img src={'images/bunnies/'+item.image+'.png'} className={'w-full h-full object-cover rounded-full'}/>
                                    </div>
                                    <p className={'font-bold text-sm bg-white p-2 absolute z-50 top-24'}>{item.telegram_id}</p>
                                    <p className={'font-bold text-2xl p-2'}>{(10-(counter))}</p>
                                </div>
                            }
                        })}
                    </div>
                </div>
                <div className={'w-full rounded-2xl border-2 border-white gap-4 mt-12'}>
                    <div className={'grid grid-cols-3 items-center w-full border-b-2 border-white'}>
                        <div className={'col-span-1 p-2 border-white h-full flex justify-center relative items-center'}>
                            <p className={'text-white text-xs sm:text-xl font-bold'}>Image|number</p>
                        </div>
                        <div className={'col-span-1 border-l-2 border-white h-full flex justify-center items-center'}>
                            <p className={'text-white text-xs sm:text-xl'}>Telegram id</p>
                        </div>
                        <div className={'col-span-1 border-l-2 border-white h-full flex justify-center items-center'}>
                            <p className={'text-white text-xs sm:text-xl'}>{currentTab}</p>
                        </div>
                    </div>
                    {reversing().map((item,counter)=>{
                        return <div className={'grid grid-cols-3 items-center w-full border-b-2 border-white'} key={item.telegram_id+counter}>
                            <div className={'col-span-1 p-2 border-white h-full flex justify-center relative items-center'}>
                                <img src={'images/bunnies/'+item.image+'.png'} className={'w-20 h-20 object-cover rounded-full'}/>
                                <div className={'w-7 h-7 bg-white rounded-full absolute left-2 top-2 flex justify-center items-center'}>
                                    <p className={'text-xs sm:text-xl font-bold'}>{counter+1}</p>
                                </div>
                            </div>
                            <div className={'col-span-1 border-l-2 border-white h-full flex justify-center items-center'}>
                                <p className={'text-xs sm:text-xl text-white'}>{item.telegram_id}</p>
                            </div>
                            <div className={'col-span-1 border-l-2 border-white h-full flex justify-center items-center'}>
                                <p className={'text-xs sm:text-xl text-white'}>{item[currentTab]}</p>
                            </div>
                        </div>
                    })}
                </div>
            </main>

            <footer className={styles.footer}>
                <a
                    href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                    target="_blank"
                    rel="noopener noreferrer"
                >
                    Powered by{' '}
                    <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16}/>
          </span>
                </a>
            </footer>
        </div>
    )
}

export default Home
